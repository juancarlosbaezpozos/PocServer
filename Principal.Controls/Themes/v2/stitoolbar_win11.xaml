<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:controls="clr-namespace:Principal.Controls.Core">
    <Color x:Key="office15ColorButtonMOBackground">#d5e1f2</Color>
    <Color x:Key="office15ColorButtonPRBackground">#a3bde3</Color>
    <Color x:Key="office15GlobalBorderBrushColor">#c6c6c6</Color>
    <Color x:Key="office15ColorButtonNormalBackground">#fdfdfd</Color>
    <SolidColorBrush x:Key="office15ToolBarBtnMOBackground" Color="{StaticResource office15ColorButtonMOBackground}" />
    <SolidColorBrush x:Key="office15ToolBarBtnPRBackground" Color="{StaticResource office15ColorButtonPRBackground}" />
    <SolidColorBrush x:Key="office15BorderBrush" Color="{StaticResource office15GlobalBorderBrushColor}" />
    <SolidColorBrush x:Key="office15Foreground" Color="#444444" />
    <SolidColorBrush x:Key="office15ButtonChecked" Color="#c2d5f2" />
    <SolidColorBrush x:Key="office15ButtonMouseOver" Color="#d4e0f1" />
    <SolidColorBrush x:Key="office15ButtonPressed" Color="#a3bde3" />
    <SolidColorBrush x:Key="EditorForeground" Color="Black" />
    <SolidColorBrush x:Key="office15ButtonPRBorderBrush" Color="#3e6db5" />
    <SolidColorBrush x:Key="office15ButtonMOBorderBrush" Color="#a3bde3" />
    <SolidColorBrush x:Key="office15ButtonNormalBackground" Color="{StaticResource office15ColorButtonNormalBackground}" />
    <SolidColorBrush x:Key="office15ButtonNormalBorderBrush" Color="#ababab" />
    <SolidColorBrush x:Key="office15ScrollBarGlyph" Color="#777777" />
    <SolidColorBrush x:Key="office15ButtonMOBackground" Color="{StaticResource office15ColorButtonMOBackground}" />
    <SolidColorBrush x:Key="office15ButtonPRBackground" Color="{StaticResource office15ColorButtonPRBackground}" />
    <SolidColorBrush x:Key="EditorBackgroundReadOnly" Color="#EAF2FB" />
    <SolidColorBrush x:Key="office15ComboBoxBorderBrush" Color="#b6b6b6" />
    <SolidColorBrush x:Key="office15AppButton2010PressedBackground" Color="#19478a" />
    <SolidColorBrush x:Key="office15AppButton2010MouseOverBackground" Color="#3e6db5" />
    <controls:StiBoolToVisualConverter x:Key="boolToVisualConverter" />
    <Style x:Key="StiToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="bd" Background="#00FFFFFF">
                        <Canvas HorizontalAlignment="Right" Margin="4,2,2,2" VerticalAlignment="Bottom" Width="6" Height="7">
                            <Path Data="M1,1.5 L6,1.5" Stroke="#FFFFFFFF" />
                            <Path Name="path1" Data="M0,0.5 L5,0.5" Stroke="#051d40" />
                            <Path Data="M0.5,4 L6.5,4 L3.5,7" Fill="#FFFFFFFF" />
                            <Path Name="path2" Data="M-0.5,3 L5.5,3 L2.5,6" Fill="#051d40" />
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="bd" Property="Border.Background" Value="{StaticResource office15ToolBarBtnMOBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="bd" Property="Border.Background" Value="{StaticResource office15ToolBarBtnPRBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="bd" Property="UIElement.Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StiToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="bd" Background="#00FFFFFF">
                        <Canvas HorizontalAlignment="Right" Margin="2,4,2,2" VerticalAlignment="Bottom" Width="7" Height="6">
                            <Path Data="M1.5,1 L1.5,6" Stroke="#FFFFFFFF" />
                            <Path Name="path1" Data="M0.5,0 L0.5,5" Stroke="#051d40" />
                            <Path Data="M3.5,0.5 L7,3.5 L4,6.5" Fill="#FFFFFFFF" />
                            <Path Name="path2" Data="M3,-0.5 L6,2.5 L3,5.5" Fill="#051d40" />
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="bd" Property="Border.Background" Value="{StaticResource office15ToolBarBtnMOBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="bd" Property="Border.Background" Value="{StaticResource office15ToolBarBtnPRBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="bd" Property="UIElement.Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type controls:StiToolBar}" TargetType="{x:Type controls:StiToolBar}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinWidth" Value="36" />
        <Setter Property="MinHeight" Value="36" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="#FFFFFFFF" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:StiToolBar}">
                    <Border Background="#FFFFFFFF" CornerRadius="{TemplateBinding controls:StiToolBar.CornerRadius}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{StaticResource office15BorderBrush}">
                        <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local" Margin="2">
                            <Grid Name="OverflowGrid" HorizontalAlignment="Right" DockPanel.Dock="Right">
                                <ToggleButton Name="OverflowButton" Panel.ZIndex="100" ClickMode="Press" Style="{StaticResource StiToolBarHorizontalOverflowButtonStyle}" Visibility="{TemplateBinding HasOverflowItems, Converter={StaticResource boolToVisualConverter}}" FocusVisualStyle="{x:Null}" IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Popup Name="OverflowPopup" Focusable="false" AllowsTransparency="true" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" StaysOpen="false" IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                    <controls:StiDropShadowDecorator>
                                        <Border Background="#FFFFFFFF" BorderThickness="{x:Static controls:StiControlsV2Win11Helper.Thickness1111}" BorderBrush="{StaticResource office15ComboBoxBorderBrush}">
                                            <ToolBarOverflowPanel Name="PART_ToolBarOverflowPanel" Focusable="true" Margin="2" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle" WrapWidth="200" FocusVisualStyle="{x:Null}" />
                                        </Border>
                                    </controls:StiDropShadowDecorator>
                                </Popup>
                            </Grid>
                            <ToolBarPanel Name="PART_ToolBarPanel" IsItemsHost="true" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToolBar.Orientation" Value="Vertical">
                            <Setter TargetName="OverflowButton" Property="Style" Value="{StaticResource StiToolBarVerticalOverflowButtonStyle}" />
                            <Setter TargetName="PART_ToolBarPanel" Property="Margin" Value="0" />
                            <Setter TargetName="OverflowGrid" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="OverflowGrid" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="OverflowPopup" Property="Popup.Placement" Value="Right" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StiToolBarToggleButtonStyle" TargetType="{x:Type controls:StiToggleButton}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:StiToggleButton}">
                    <Border Name="bd" Background="#00FFFFFF" TextElement.Foreground="{StaticResource office15Foreground}">
                        <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="bd" Property="Border.Background" Value="{StaticResource office15ButtonChecked}" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="bd" Property="Border.Background" Value="{StaticResource office15ButtonMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="bd" Property="Border.Background" Value="{StaticResource office15ButtonPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="bd" Property="UIElement.Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StiToolBarButtonStyle" TargetType="{x:Type controls:StiButton}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="Foreground" Value="{StaticResource office15Foreground}" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:StiButton}">
                    <Border Name="bd" Background="#00FFFFFF">
                        <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="bd" Property="Border.Background" Value="{StaticResource office15ButtonMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="bd" Property="Border.Background" Value="{StaticResource office15ButtonPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="bd" Property="UIElement.Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StiToolBarRadioButtonStyle" TargetType="{x:Type controls:StiRadioButton}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Padding" Value="2,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:StiRadioButton}">
                    <Border Name="bd" Margin="0,1" Background="#00FFFFFF" BorderBrush="#00FFFFFF" BorderThickness="1">
                        <ContentPresenter Name="cp" VerticalAlignment="Center" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" TextElement.Foreground="{StaticResource EditorForeground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="bd" Property="Border.BorderBrush" Value="{StaticResource office15ButtonPRBorderBrush}" />
                            <Setter TargetName="bd" Property="Border.Background" Value="{StaticResource office15ButtonMouseOver}" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="bd" Property="Border.BorderBrush" Value="{StaticResource office15ButtonMOBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="bd" Property="Border.BorderBrush" Value="{StaticResource office15ButtonPRBorderBrush}" />
                            <Setter TargetName="bd" Property="Border.Background" Value="{StaticResource office15ButtonMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="cp" Property="UIElement.Opacity" Value="0.6" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="IsPressed" Value="true" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="bd" Property="Border.Background" Value="{StaticResource office15ButtonPRBorderBrush}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StiToolBarCheckBoxStyle" TargetType="{x:Type controls:StiCheckBox}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:StiCheckBox}">
                    <StackPanel Orientation="Horizontal">
                        <Grid Name="gr" VerticalAlignment="Center" Margin="0,0,2,0">
                            <Border Name="bd" Width="14" Height="14" CornerRadius="{x:Static controls:StiControlsV2Win11Helper.ButtonCornerRadius}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{StaticResource office15ButtonNormalBackground}" BorderBrush="{StaticResource office15ButtonNormalBorderBrush}" />
                            <Path Name="check" IsHitTestVisible="False" Stretch="None" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Width="8" Height="6" Data="M1,3 L3,5 L7,1" Visibility="Collapsed" VerticalAlignment="Center" StrokeThickness="1" Stroke="#FFFFFFFF" StrokeDashCap="Round" StrokeLineJoin="Round" />
                            <Rectangle Name="rectDefault" Visibility="Collapsed" IsHitTestVisible="False" Width="6" Height="6" RadiusX="2" RadiusY="2" Fill="#FFFFFFFF" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Grid>
                        <ContentPresenter Name="cp" Margin="4,0,0,0" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="Center" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="bd" Property="Border.Background" Value="{StaticResource office15AppButton2010PressedBackground}" />
                            <Setter TargetName="bd" Property="Border.BorderThickness" Value="0" />
                            <Setter TargetName="check" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="{x:Null}">
                            <Setter TargetName="bd" Property="Border.Background" Value="{StaticResource office15AppButton2010PressedBackground}" />
                            <Setter TargetName="bd" Property="Border.BorderThickness" Value="0" />
                            <Setter TargetName="rectDefault" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="bd" Property="Border.Background" Value="{StaticResource office15AppButton2010MouseOverBackground}" />
                            <Setter TargetName="bd" Property="Border.BorderBrush" Value="{StaticResource office15ButtonMOBorderBrush}" />
                            <Setter TargetName="bd" Property="Border.BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="bd" Property="Border.Background" Value="{StaticResource office15AppButton2010MouseOverBackground}" />
                            <Setter TargetName="bd" Property="Border.BorderBrush" Value="{StaticResource office15ButtonPRBorderBrush}" />
                            <Setter TargetName="bd" Property="Border.BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="gr" Property="UIElement.Opacity" Value="0.4" />
                            <Setter TargetName="cp" Property="UIElement.Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StiToolBarTextBoxStyle" TargetType="{x:Type controls:StiTextBox}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="Height" Value="22" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:StiTextBox}">
                    <Grid>
                        <Rectangle Name="bd" Fill="#FFFFFFFF" StrokeThickness="{x:Static controls:StiControlsV2Win11Helper.SeparatorLine}" Stroke="{StaticResource office15ButtonNormalBorderBrush}" />
                        <controls:StiScrollViewer x:Name="PART_ContentHost" Margin="1,2,0,0" Foreground="{StaticResource EditorForeground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TextBoxBase.IsReadOnly" Value="true">
                            <Setter TargetName="bd" Property="Shape.Fill" Value="{StaticResource EditorBackgroundReadOnly}" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="bd" Property="Shape.Stroke" Value="{StaticResource office15ButtonMOBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="bd" Property="Shape.Stroke" Value="{StaticResource office15ButtonPRBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StiToolBarMenuStyle" TargetType="{x:Type controls:StiMenu}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="BorderBrush" Value="#00FFFFFF" />
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:StiMenu}">
                    <Border Name="MenuBorder" Background="{TemplateBinding Control.Background}" MinHeight="10" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
                        <StackPanel Margin="{TemplateBinding FrameworkElement.Margin}" ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>