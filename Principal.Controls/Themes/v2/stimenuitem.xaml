<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:controls="clr-namespace:Principal.Controls.Core">
    <Color x:Key="office15GlobalBorderBrushColor">#c6c6c6</Color>
    <SolidColorBrush x:Key="office15Foreground" Color="#444444" />
    <SolidColorBrush x:Key="office15ComboBoxBorderBrush" Color="#b6b6b6" />
    <SolidColorBrush x:Key="office15BorderBrush" Color="{StaticResource office15GlobalBorderBrushColor}" />
    <SolidColorBrush x:Key="office15ButtonMouseOver" Color="#d4e0f1" />
    <SolidColorBrush x:Key="office15ButtonPRBorderBrush" Color="#3e6db5" />
    <SolidColorBrush x:Key="office15ScrollBarGlyph" Color="#777777" />
    <SolidColorBrush x:Key="office15ButtonChecked" Color="#c2d5f2" />
    <ControlTemplate x:Key="StiMenuItemTopLevelHeaderTemplateKey" TargetType="{x:Type controls:StiMenuItem}">
        <Grid Name="bd" Background="#00FFFFFF">
            <ContentPresenter Name="TextInternal" Margin="6,3" HorizontalAlignment="Center" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" IsHitTestVisible="False" TextElement.Foreground="{StaticResource office15Foreground}" />
            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding MenuItem.IsSubmenuOpen}" UseLayoutRounding="True" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                <Border Name="SubmenuBorder" Margin="5" Background="#FFFFFFFF" BorderThickness="{x:Static controls:StiControlsV2Win11Helper.Thickness1011}" BorderBrush="{StaticResource office15ComboBoxBorderBrush}">
                    <UIElement.Effect>
                        <DropShadowEffect Direction="320" BlurRadius="6" ShadowDepth="0" Opacity="0.15" />
                    </UIElement.Effect>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid ColumnSpan="2" IsHitTestVisible="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Rectangle Name="LeftLine" Height="{x:Static controls:StiControlsV2Win11Helper.SeparatorLine}" Fill="#FFFFFFFF" Width="{Binding ElementName=bd, Path=ActualWidth}" />
                            <Rectangle Width="2" Height="{x:Static controls:StiControlsV2Win11Helper.SeparatorLine}" HorizontalAlignment="Right" Fill="{StaticResource office15BorderBrush}" />
                            <Rectangle Name="RightLine" Grid.Column="1" Height="{x:Static controls:StiControlsV2Win11Helper.SeparatorLine}" Fill="{StaticResource office15BorderBrush}" />
                        </Grid>
                        <StackPanel Grid.ColumnSpan="2" Grid.Row="1" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Grid>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="Popup.PopupAnimation" Value="None" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="MenuItem.IsHighlighted" Value="true" />
                    <Condition Property="MenuItem.IsSubmenuOpen" Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="bd" Property="Panel.Background" Value="{StaticResource office15ButtonChecked}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="MenuItem.IsHighlighted" Value="true" />
                    <Condition Property="MenuItem.IsSubmenuOpen" Value="false" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="bd" Property="Panel.Background" Value="{StaticResource office15ButtonMouseOver}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="TextInternal" Property="UIElement.Opacity" Value="0.6" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="StiMenuItemTopLevelItemTemplateKey" TargetType="{x:Type controls:StiMenuItem}">
        <Border Name="bd" Background="#00FFFFFF">
            <ContentPresenter Margin="6,3" HorizontalAlignment="Center" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" IsHitTestVisible="False" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.IsHighlighted" Value="true">
                <Setter TargetName="bd" Property="Border.Background" Value="{StaticResource office15ButtonMouseOver}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="bd" Property="UIElement.Opacity" Value="0.4" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="StiMenuItemSubmenuItemTemplateKey" TargetType="{x:Type controls:StiMenuItem}">
        <Grid Name="bd" Margin="1" MinHeight="24" Background="#00FFFFFF">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="24" SharedSizeGroup="Icon" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                <ColumnDefinition Width="13" />
            </Grid.ColumnDefinitions>
            <Rectangle Name="checkRect" Width="20" Height="20" Visibility="Hidden" RadiusX="{x:Static controls:StiControlsV2Win11Helper.DefaultRadius}" RadiusY="{x:Static controls:StiControlsV2Win11Helper.DefaultRadius}" StrokeThickness="{x:Static controls:StiControlsV2Win11Helper.SeparatorLine}" IsHitTestVisible="False" Fill="{StaticResource office15ButtonMouseOver}" Stroke="{StaticResource office15ButtonPRBorderBrush}" />
            <Border Name="borderCheckMark" Visibility="Hidden" IsHitTestVisible="False">
                <Path Name="checkMark" HorizontalAlignment="Center" VerticalAlignment="Center" Width="11" Height="11" Visibility="Hidden" StrokeDashCap="Round" StrokeLineJoin="Round" Stretch="Uniform" StrokeStartLineCap="Round" StrokeThickness="1" Data="M1,3 L3,5 L7,1" Stroke="{StaticResource office15ScrollBarGlyph}" />
            </Border>
            <ContentPresenter Name="Icon" HorizontalAlignment="Center" VerticalAlignment="Center" ContentSource="Icon" IsHitTestVisible="False" />
            <ContentPresenter Name="HeaderHost" Grid.Column="1" Margin="8,0,0,0" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" IsHitTestVisible="False" />
            <TextBlock Name="InputGestureText" Grid.Column="2" Margin="4,0" VerticalAlignment="Center" Text="{TemplateBinding MenuItem.InputGestureText}" IsHitTestVisible="False" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.Icon" Value="{x:Null}">
                <Setter TargetName="borderCheckMark" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="MenuItem.IsChecked" Value="true">
                <Setter TargetName="checkMark" Property="UIElement.Visibility" Value="Visible" />
                <Setter TargetName="checkRect" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="true">
                <Setter TargetName="bd" Property="Panel.Background" Value="{StaticResource office15ButtonChecked}" />
                <Setter TargetName="checkRect" Property="Shape.Fill" Value="{StaticResource office15ButtonChecked}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter TargetName="bd" Property="UIElement.Opacity" Value="0.4" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="StiMenuItemSubmenuHeaderTemplateKey" TargetType="{x:Type controls:StiMenuItem}">
        <Grid Name="bd" Background="#00FFFFFF" Margin="1" MinHeight="24">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="24" SharedSizeGroup="Icon" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                <ColumnDefinition Width="13" />
            </Grid.ColumnDefinitions>
            <ContentPresenter Name="Icon" HorizontalAlignment="Center" VerticalAlignment="Center" ContentSource="Icon" IsHitTestVisible="False" />
            <ContentPresenter Name="HeaderHost" Margin="8,0,0,0" Grid.Column="1" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" IsHitTestVisible="False" />
            <TextBlock Name="InputGestureText" VerticalAlignment="Center" Grid.Column="2" Margin="4,0" Text="{TemplateBinding MenuItem.InputGestureText}" IsHitTestVisible="False" />
            <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,0 L0,7 L4,3.5" IsHitTestVisible="False" Fill="{StaticResource office15ScrollBarGlyph}" />
            <Popup Name="Popup" Placement="Right" HorizontalOffset="-4" UseLayoutRounding="True" IsOpen="{TemplateBinding MenuItem.IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                <Border Name="SubmenuBorder" Background="#FFFFFFFF" Margin="5" BorderThickness="{x:Static controls:StiControlsV2Win11Helper.Thickness1111}" BorderBrush="{StaticResource office15ComboBoxBorderBrush}">
                    <UIElement.Effect>
                        <DropShadowEffect Direction="320" BlurRadius="6" ShadowDepth="0" Opacity="0.15" />
                    </UIElement.Effect>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.ColumnSpan="2" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Grid>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="true">
                <Setter TargetName="bd" Property="Panel.Background" Value="{StaticResource office15ButtonChecked}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter TargetName="bd" Property="UIElement.Opacity" Value="0.4" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{x:Type controls:StiMenuItem}" TargetType="{x:Type controls:StiMenuItem}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Style.Triggers>
            <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource StiMenuItemTopLevelHeaderTemplateKey}" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource StiMenuItemTopLevelItemTemplateKey}" />
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource StiMenuItemSubmenuHeaderTemplateKey}" />
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource StiMenuItemSubmenuItemTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>